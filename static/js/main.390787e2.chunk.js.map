{"version":3,"sources":["components/LoginMenu.js","components/Nav.js","components/CollectionForm.js","components/Selector.js","config.js","components/ParentHomebriding.js","components/ParentDetentionCenterView.js","components/ParentHomeworkClubView.js","components/ParentView.js","components/ParentClient.js","components/TableR.js","components/CallbackButton.js","components/TableComponent.js","components/DescriptionText.js","components/HomebridingTable.js","components/DatePicker2.js","components/DatePicker.js","components/HomeworkClub.js","components/AdminHomeworkClubView.js","components/AdminDetentionsView.js","components/AdminView.js","components/AdminClient.js","App.js","index.js"],"names":["LoginMenu","require","state","className","htmlFor","id","type","placeholder","onChange","this","props","callbackOnChangeUsername","callbackOnChangePassword","size","onPress","callbackButton","React","Component","Nav","uk-navbar","uk-sticky","to","href","uk-dropdown","CollectionForm","uk-grid","collectionLegend","children","uniqid","Selector","elements","arrayToMap","configObjectValue","labelText","callbackFunction","defaultValue","map","element","value","configValues","students","homeworkClubHeaders","times","classes","periods","serverURL","ParentHomebriding","student","hours","displayedHours","fetch","method","headers","Headers","body","JSON","stringify","studentId","then","res","json","setState","totalHours","document","querySelector","hoursUpdate","alert","fname","lname","onClick","updateHours","setMinutes","ParentView","Loader","ParentClient","username","password","loginState","parent","loaded","console","log","authCheck","event","updateUsernameState","updatePasswordState","target","conditionalCheck","condition","path","TableR","tableLegend","tableHeaders","propName","entries","entry","CallbackButton","idProp","buttonDisplayValue","TableComponent","studentName","selectorValue","description","dueDate","referenceIndex","color","callbackRef","uk-icon","DescriptionText","passedStateValue","passedId","descriptionPlaceholder","HomebridingTable","DatePicker2","useState","date","setDate","onDateChange","locale","enGB","inputProps","focused","DatePicker","hwcHeaders","getFormattedDate","year","getFullYear","month","getMonth","toString","length","day","getDate","AdminHomeworkClubView","homeworkEntries","detentionEntries","descriptionText","initialTablePopulation","Date","listOfEntries","prevState","_id","class","onClickRemoveCard","Object","splicedName","split","data","assignedBy","period","studentFname","studentLname","responseObject","additionalTablePopulation","responseId","referenceId","filter","onClickAddHomeworkCard","misbehaviorCategories","AdminView","allStudentInfo","collectStudentInfo","sort","a","b","AdminDetentionsView","AdminClient","admin","loading","loadedState","App","style","marginLeft","marginRight","marginTop","ReactDOM","render"],"mappings":"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","file":"static/js/main.390787e2.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { AwesomeButton } from 'react-awesome-button';\nimport AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\n\nvar Loader = require('react-loader');\n\n\n\nclass LoginMenu extends React.Component {\n    state = {}\n\n    render() {\n        return (\n            <div className=\"uk-width-1-1\">\n\n                <div>\n                    <br />\n                    <br />\n                    <p className=\"uk-text-lead\">Orion Academy Webtools and Database</p>\n                    <p className=\"uk-text-meta\">(Parent View - Username = pparent, Password = 123)</p>\n                    <p className=\"uk-text-meta\">(Admin View - Username = admin, Password = 123)</p>\n                    <h4>Heroku server may take a minute to wake up upon data submission!</h4>\n\n\n                    <br />\n                    <br />\n                    <div>\n                        <label htmlFor=\"userName\">Username: </label>\n                        <input\n                            className=\"uk-input uk-form uk-form-width-medium uk-margin-right uk-margin-left\"\n                            id=\"userName\"\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            onChange={this.props.callbackOnChangeUsername}\n                        />\n                        <label htmlFor=\"pwd\">Password: </label>\n                        <input\n                            className=\"uk-input uk-form uk-form-width-medium uk-margin-right uk-margin-left\"\n                            id=\"Pwd\"\n                            type=\"text\"\n                            placeholder=\"Password\"\n                            onChange={this.props.callbackOnChangePassword}\n                        />\n\n                        <AwesomeButton\n                            id=\"awesome button\"\n                            size={'large'}\n                            type=\"primary\"\n                            onPress={this.props.callbackButton}\n                        >\n                            Log In\n                        </AwesomeButton>\n                        \n\n                    </div>\n                    <br />\n                    <br />\n                    <p className=\"uk-text-medium uk-margin-top uk-margin-bottom\">Don't have a username and password, or forgot yours? Email your student's homeroom teacher for assistance!</p>\n                    <p className=\"uk-text-meta uk-margin-top uk-margin-bottom\">Students must complete 350 hours of homebriding activity to fufill the physical education requirement. Log in to see your student's progress.</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginMenu;\n\n","import React from 'react';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n\nfunction Nav() {\n    return (\n        <div>\n            <div className=\"not_mobile\">\n                <nav className=\"uk-navbar-container uk-width-1-1\" uk-navbar=\"true\" uk-sticky=\"sel-target: .uk-navbar-container; cls-active: uk-navbar-sticky\">\n\n                    <div className=\"uk-navbar-center\">\n\n                        <div className=\"uk-navbar-center-left\">\n                            <div>\n                                <ul className=\"uk-navbar-nav\">\n                                    <li className=\"\">\n                                        <Link to=\"/detentioncenter\">\n                                            Detention Center\n                                        </Link>\n                                    </li>\n                                    <li className=\"\">\n                                        <Link to=\"/homeworkclub\">\n                                            Homework Club\n                                        </Link>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n\n                        <Link className=\"uk-navbar-item uk-logo\" to=\"/home\">\n                            Orion\n                        </Link>\n\n                        <div className=\"uk-navbar-center-right\">\n                            <div>\n                                <ul className=\"uk-navbar-nav\">\n                                    <li className=\"\">\n                                        <Link to=\"/homebriding\">\n                                            Homebriding\n                                        </Link>\n                                    </li>\n\n                                    <li>\n                                        <ul className=\"uk-navbar-nav\">\n                                            <li className=\"\">\n                                                <a href=\"#\">\n                                                    <span >Support</span>\n                                                </a>\n                                            </li>\n                                        </ul>\n\n                                        <div className=\"uk-navbar-dropdown\" uk-dropdown=\"mode: click; pos: bottom-justify; offset: 10\">\n                                            <ul className=\"uk-nav uk-navbar-dropdown-nav\">\n                                                <li className=\"uk-active\"><a href=\"#\">Support Tickets</a></li>\n                                                <li>\n                                                    <Link to=\"/guides\">\n                                                        Guides\n                                                    </Link>\n                                                </li>\n                                                <li><a href=\"#\">Procedures</a></li>\n                                            </ul>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n\n                    </div>\n                </nav>\n            </div>\n\n        </div >\n    )\n}\n\nexport default Nav","import React from \"react\";\n\n\nfunction CollectionForm(props) {\n    return (\n        <div className=\"uk-flex uk-flex-center\" uk-grid=\"true\">\n            <div>\n                \n                    <fieldset className=\"uk-fieldset\">\n\n                        <legend className=\"uk-legend uk-margin-top\">{props.collectionLegend}</legend>\n\n                        {props.children}\n\n                    </fieldset>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default CollectionForm;","import React from \"react\";\n\nvar uniqid = require('uniqid');\n\nfunction Selector(props) {\n    var elements = props.arrayToMap\n\n    return (\n        <div className=\"uk-margin\">\n            <label className=\"uk-form-label\" htmlFor={props.configObjectValue}>{props.labelText}</label>\n            <select onChange={props.callbackFunction} defaultValue=\"default\" id={props.configObjectValue} className=\"uk-select\">\n                {elements.map( (element) => (\n                    <option id={uniqid()} value={element}>{element}</option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\nexport default Selector","const configValues = {\n    students: [\"Attias, Alessandro\", \"Barnes, Nathan\", \"Bobbitt, Matthew\", \"Bongiorno, Anthony\", \"Boyd, Michael\", \"Brant, Miles\", \"Castro Curry, Diego\",\n    \"Chao Bierhaus, Clara\", \"Che, Micah\", \"Cody, Joshua\", \"Crain, Madi\", \"Cunningham, Jack\", \"Danielson, Kai\", \"Dillon, Ana-Li\", \"Donovan, William\",\n    \"Dwyer, Kelly\", \"Edwardson, Thomas\", \"Ereneta, Ben\", \"Fazzio, Andrew\", \"Foley, Daniel\", \"Fox, John Edmund\", \"Galka, Trevor\", \"Gellman, Mira\", \"Golinski, Daniel\",\n    \"Gorelick, Noah\", \"Heitmann, Adam\", \"Hubbell, Jack\", \"Johnston, Peter\", \"Joslyn, Matthew\", \"Jureidini, Nico\", \"Kantor, Ethan\", \"Kavanaugh-Lynch, Matthew\", \"Krull, Alexander\",\n    \"Lake, Ethan\", \"Lessman, Cameron\", \"Ley-Languren, Sergio\", \"Lynn, Emmett Shaw\", \"Mahoney, Caslyn\", \"Mark, Christopher\", \"Maschal, Charles Ashton\", \"McInnis, Ben\", \"Morales, Dominic\",\n    \"Morewitz, Benjamin\", \"Murphy, Daniel\", \"Owczarz, Adrian\", \"Padgette, Cameron Matthew\", \"Rangan, Govinda\", \"Reiter, Sam\", \"Rogers, Jack\", \"Sofaer, Ezekiel\", \"Sovocool, Natalie\", \"Thomas, Jared\",\n    \"Wright, Julia\", \"Zang, Hannah L.\"],\n    homeworkClubHeaders: [\"Student\", \"Class\", \"Assignment Description\", \"Due Date\", \"Completed\", \"Incompleted\"],\n    times: [\"15\", \"30\", \"45\", \"60\"],\n    classes: [\"Computer Science Principles\", \"Intro to Technology\"],\n    periods: [\"A\", \"HR\", \"1\", \"2\", \"3\", \"4\", \"lunch\", \"5\", \"6\", \"7\", \"8\"],\n    serverURL: \"https://school-tools-demo-server.herokuapp.com\"\n}\n\nexport default configValues;","import React from \"react\"\n\nimport Selector from \"./Selector.js\";\nimport configValues from \"../config.js\"\n\nclass ParentHomebriding extends React.Component {\n    state = { student: {}, hours: 0, displayedHours: 0 }\n\n    // TODO: make the properties in DB and props name match\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/singleStudent\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ studentId: this.props.studentId })\n        })\n            .then(res => res.json())\n            .then(student => this.setState({ student: student, displayedHours: student.totalHours }))\n    }\n\n\n\n    setMinutes() {\n        this.setState({ hours: (document.querySelector(\"#homebridingTime\").value / 60) })\n    }\n\n    updateHours() {\n        fetch(configValues.serverURL + \"/api/singleStudent\", {\n            method: 'PUT',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ studentId: this.props.studentId, hoursUpdate: this.state.hours })\n        })\n            .then(res => res.json())\n            .then(student => this.setState({ student: student, displayedHours: this.state.displayedHours + this.state.hours }))\n            .then(alert( \"Your students hours have been updated! Please refresh to see changes\" ))\n    }\n\n    render() {\n        return (\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center\" uk-grid=\"True\">\n                <div className=\"uk-align-center\">\n                    <br />\n                    <br />\n                    <div>\n                        <p className=\"uk-text-lead\">Example Student's homebriding Database</p>\n                    </div>\n                    <br />\n                    <div>\n                        <p className=\"uk-text-small\">{this.state.student.fname + \" \" + this.state.student.lname} has earned {this.state.displayedHours}/320 hours so far!</p>\n                        <p className=\"uk-text-small\">There are X days remaining until the next quarter of homebriding hours</p>\n                    </div>\n                </div>\n\n\n                <div className=\"\">\n                    <p className=\"uk-text-medium\">Log hours:</p>\n                    <label className=\"uk-margin-right\" htmlFor=\"userName\">Activity:</label>\n                    <input\n                        className=\"uk-input uk-form uk-form-width-medium uk-margin-right\"\n                        id=\"activity\"\n                        type=\"text\"\n                        placeholder=\"Activity\"\n                    />\n\n                    <label className=\"uk-margin-right\" htmlFor=\"pwd\">Date:</label>\n                    <input\n                        className=\"uk-input uk-form uk-form-width-medium uk-margin-right\"\n                        id=\"date\"\n                        type=\"text\"\n                        placeholder=\"Date\"\n                    />\n                    <button onClick={() => this.updateHours()} type=\"button\" className=\"uk-align-right uk-margin-left uk-margin-right uk-button uk-button-primary\">Submit</button>\n                    <Selector\n                        configObjectValue=\"homebridingTime\"\n                        arrayToMap={configValues.times}\n                        labelText=\"Select amount of time (minutes): \"\n                        callbackFunction={() => this.setMinutes()}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ParentHomebriding","import React from 'react'\n\nimport configValues from '../config.js';\n\nclass ParentDetentionCenterView extends React.Component {\n    state = { detentions: [] }\n\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/detentionCenter\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ studentId: \"5eb0a14c8ec536f27b41a3b0\" })\n        })\n            .then(res => res.json())\n            .then(detentions => this.setState({ detentions }))\n    }\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.state.detentions.map(detention => <li>{\"period = \" + detention.period + \", reason = \" + detention.reason}</li>)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ParentDetentionCenterView","import React from 'react'\n\nimport configValues from '../config.js';\n\n\nclass ParentHomeworkClubView extends React.Component {\n    state = { homeworkClubs: [] }\n\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/homeworkClub\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ studentId: \"5eb0a14c8ec536f27b41a3b0\" })\n        })\n            .then(res => res.json())\n            .then(homeworkClubs => this.setState({homeworkClubs}))\n    }\n// this.setState({ homeworkClubs })\n\n    render() {\n        return (\n            <div>\n                <ul>\n                    {this.state.homeworkClubs.map(clubEntry => <li>{\"type = \" + clubEntry.type + \", reason = \" + clubEntry.reason}</li>)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ParentHomeworkClubView","import React from \"react\";\n\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport Nav from \"./Nav.js\";\nimport CollectionForm from './CollectionForm.js'\n\n// tab components\nimport ParentHomebriding from './ParentHomebriding.js';\nimport ParentDetentionCenterView from './ParentDetentionCenterView.js';\nimport ParentHomeworkClubView from './ParentHomeworkClubView.js';\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n// <button onClick={this.props.callbackFunction} type=\"button\"  className=\"uk-align-right uk-margin-right uk-button uk-button-primary\">Log In</button>\n\n// TODO: convert to class and use fetch with setState to --> then passdown state values as props\nfunction ParentView(props) {\n    return (\n        <div>\n            <CollectionForm>\n                <ParentHomebriding studentId={props.studentId} />\n            </CollectionForm>\n        </div >\n    )\n}\n\nexport default ParentView;\n\n/*\n<Router>\n                <Nav />\n\n                <Switch>\n                    <Route path=\"/detentioncenter\">\n                        <ParentDetentionCenterView />\n                    </Route>\n\n                    <Route path=\"/homeworkclub\">\n                        <ParentHomeworkClubView />\n                    </Route>\n\n                    <Route path=\"/homebriding\">\n                        <ParentHomebriding studentId={props.studentId} />\n                    </Route>\n\n                    <Route path=\"/supporttickets\" >\n                        <h1>Coming soon!</h1>\n                    </Route>\n\n                    <Route path=\"/guides\" >\n                        <h1>Coming soon!</h1>\n                    </Route>\n\n                    <Route path=\"/procedures\" >\n                        <h1>Coming soon!</h1>\n                    </Route>\n\n                    <Route path=\"/home\" >\n                        <CollectionForm collectionLegend={\"\"}>\n                            Welcome to the Orion Academy Web Tool!\n                        </CollectionForm>\n\n                    </Route>\n                </Switch>\n\n            </Router>\n*/","import React from 'react'\n\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\n\nimport CollectionForm from './CollectionForm.js'\n\nimport configValues from '../config.js';\n\n\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\nvar Loader = require('react-loader');\n\n\n// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\nclass ParentClient extends React.Component {\n    state = { username: \"\", password: \"\", loginState: \"\", parent: false, loaded: true }\n\n    \n\n    componentDidMount() {\n        console.log(\"mount \", this.state.parent)\n        this.setState({\n            loginState:\n                <CollectionForm >\n                    <LoginMenu\n                        callbackButton={() => this.authCheck()}\n                        callbackOnChangeUsername={(event) => this.updateUsernameState(event)}\n                        callbackOnChangePassword={(event) => this.updatePasswordState(event)}\n                    />\n                </CollectionForm>\n        })\n    }\n\n    // updates the state on keystroke change\n    updateUsernameState(event) {\n        this.setState({ username: event.target.value })\n    }\n\n    updatePasswordState(event) {\n        this.setState({ password: event.target.value })\n    }\n\n    // TODO: update the fetch to search for a parent username and password!\n    async authCheck() {\n        this.setState({ loaded: false })\n\n        await fetch(configValues.serverURL + \"/parents\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ username: this.state.username, password: this.state.password })\n        })\n            .then(res => res.json())\n            .then(parent => {\n                if (parent != false) {\n                    console.log(\"auth\", parent)\n                    this.setState({ parent })\n                }\n            })\n            .then(() => this.conditionalCheck())\n\n        await this.setState({loaded: true})\n    }\n\n    // performs auth check\n    conditionalCheck() {\n        //console.log(this.state)\n        // TODO: instead of using false here, make a prop in parent called userType and have it = parent\n        if (this.state.parent != false) {\n            this.setState({ loginState: <ParentView studentId={this.state.parent.student} /> })\n        } else {\n            alert(this.state.condition + \" is not a registered username!\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" >\n                            <Loader loaded={this.state.loaded}>\n                                {this.state.loginState}\n                            </Loader>\n                        </Route>\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n\nexport default ParentClient","import React from 'react';\n\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\nfunction TableR(props) {\n    return (\n        <div className=\"uk-flex uk-flex-center uk-margin-right uk-margin-left\">\n            <table className=\"uk-table uk-table-striped uk-table-divider uk-table-hover \">\n                <caption>\n                    <legend className=\"uk-legend uk-margin-top\">{props.tableLegend}</legend>\n                </caption>\n                <thead>\n                    <tr id={uniqid()}>\n                        {props.tableHeaders.map((propName) => <th id={uniqid()} >{propName}</th>)}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {props.entries.map(\n                        (entry) => (entry)\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TableR","import React from \"react\";\n\nfunction CallbackButton(props) {\n    return (\n            <button id={props.idProp} type=\"button\" className=\"uk-button uk-button-primary\" onClick={props.callbackFunction}>\n                {props.buttonDisplayValue}\n            </button>\n    )\n}\n\nexport default CallbackButton;","import React from 'react';\n\nimport CallbackButton from './CallbackButton.js';\n\nfunction TableComponent(props) {\n    return (\n        <tr>\n            <td>{props.studentName}</td>\n            <td>{props.selectorValue}</td>\n            <td>{props.description}</td>\n            <td>{props.dueDate}</td>\n            <CallbackButton idProp={props.referenceIndex} color=\"green\" type=\"checkmark\" callbackFunction={props.callbackRef} buttonDisplayValue={<span uk-icon=\"icon: check; ratio: 3.5\" />} />\n        </tr>\n    )\n}\n\nexport default TableComponent","import React from \"react\";\n\nfunction DescriptionText(props) {\n    return (\n        <div>\n            <input\n                className=\"uk-input uk-form-width-large uk-margin-bottom\"\n                onChange={props.callbackFunction}\n                value={props.passedStateValue}\n                id={props.passedId}\n                type=\"text\" \n                placeholder={props.descriptionPlaceholder}\n            />\n        </div>\n    )\n}\n\nexport default DescriptionText;","import React from \"react\";\n\nfunction HomebridingTable(props) {\n\n    console.log(props.students)\n\n    return (\n        <div className=\"uk-flex uk-flex-center uk-margin-right uk-margin-left\">\n            <table className=\"uk-table uk-table-striped uk-table-divider uk-table-hover \">\n                <caption>\n                    <legend className=\"uk-legend uk-margin-top\">{props.tableLegend}</legend>\n                </caption>\n                <thead>\n                    <tr>\n                        <th>Student Names</th>\n                        <th>Hours Logged</th>\n                        <th>Total Hours Earned</th>\n                        <th>Hours Needed</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.students.map(\n                        (student) => (\n                            <tr>\n                                <td>{student.lname + \", \" + student.fname}</td>\n                                <td>hours this term</td>\n                                <td>{student.totalHours}</td>\n                                <td>{320 - student.totalHours}</td>\n                            </tr>\n                        )\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default HomebridingTable;","import React, { useState } from 'react'\nimport { enGB } from 'date-fns/locale'\nimport { DatePicker } from 'react-nice-dates'\n\nimport 'react-nice-dates/build/style.css'\n\n\nfunction DatePicker2(props) {\n  const [date, setDate] = useState()\n  return (\n    <DatePicker date={date} onDateChange={setDate} locale={enGB}>\n      {({ inputProps, focused }) => (\n\n        <input\n        className={\"uk-input uk-form-width-large uk-margin-bottom \" + 'input' + (focused ? ' -focused' : '')} \n          onChange={props.callbackFunction}\n          id=\"date\"\n          type=\"text\"\n          value={props.passedStateValue}\n          {...inputProps}\n        />\n\n      )}\n    </DatePicker>\n  )\n}\n\nexport default DatePicker2","import React from \"react\";\n\nimport DatePicker2 from './DatePicker2.js';\n\nfunction DatePicker(props) {\n    return (\n        <div>\n            <DatePicker2>\n                <input\n                    className=\"uk-input uk-form-width-large uk-margin-bottom\"\n                    onChange={props.callbackFunction}\n                    id=\"date\"\n                    type=\"text\"\n                    value={props.passedStateValue}\n                />\n            </DatePicker2>\n        </div>\n    )\n}\n\nexport default DatePicker;","import React from 'react'\n\nimport configValues from '../config.js';\n\nimport TableR from './TableR.js';\nimport TableComponent from './TableComponent.js';\n\nimport CollectionForm from './CollectionForm.js';\nimport DescriptionText from './DescriptionText.js';\nimport Selector from './Selector.js';\nimport CallbackButton from './CallbackButton.js';\nimport HomebridingTable from './HomebridingTable.js';\nimport DatePicker from './DatePicker.js';\n\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n// reference values from config.js\nvar students = configValues.students\nvar times = configValues.times\nvar classes = configValues.classes\n\n// headers for each type of table\nvar hwcHeaders = configValues.homeworkClubHeaders\nvar detentionHeaders = []\n\nfunction getFormattedDate(date) {\n    var year = date.getFullYear();\n\n    var month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    var day = date.getDate().toString();\n    day = day.length > 1 ? day : '0' + day;\n\n    return month + '/' + day + '/' + year;\n}\n\n\nclass HomeworkClub extends React.Component {\n    state = {\n        homeworkEntries: [],\n    }\n\n    componentDidMount() {\n        this.setState({\n            dueDate: getFormattedDate(new Date())\n        })\n    }\n\n\n    onClickAddHomeworkCard() {\n        // TODO: refactor these uncontrolled components\n        var qstudentName = document.querySelector('#studentNames').value\n        var qclassSection = document.querySelector('#classSection').value\n\n        var qReferenceIndex = uniqid()\n\n        this.setState(prevState => ({\n            homeworkEntries: [...prevState.homeworkEntries,\n            <TableComponent\n                id={uniqid()}\n                referenceIndex={qReferenceIndex}\n                studentName={qstudentName}\n                selectorValue={qclassSection}\n                description={this.state.descriptionText}\n                dueDate={this.state.dueDate}\n                callbackRef={(event) => this.onClickRemoveCard(event)}\n            />\n            ]\n        }))\n    }\n\n    onClickRemoveCard(event) {\n        this.setState(\n            {\n                homeworkEntries: this.state.homeworkEntries.filter(function (entry) {\n                    return entry.props.referenceIndex !== event.target.id\n                })\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <CollectionForm collectionLegend={\"Homework Club\"}>\n                    <Selector\n                        configObjectValue=\"studentNames\"\n                        arrayToMap={students}\n                        labelText=\"Select a student: \"\n                    />\n                    <Selector configObjectValue=\"classSection\" arrayToMap={classes} labelText=\"Select className of assignment: \" />\n                    <DescriptionText\n                        callbackFunction={() => this.setState({ descriptionText: document.querySelector('#descriptionText').value })}\n                        passedStateValue={this.state.descriptionText}\n                        descriptionPlaceholder={\"Description of assignment\"}\n                        passedId=\"descriptionText\"\n                    />\n                    <DatePicker\n                        callbackFunction={() => this.setState({ dueDate: document.querySelector('#date').value })}\n                        passedStateValue={this.state.dueDate}\n                    />\n                    <CallbackButton callbackFunction={() => this.onClickAddHomeworkCard()} buttonDisplayValue=\"Add Student\" />\n                </CollectionForm>\n\n                <TableR entries={this.state.homeworkEntries} tableHeaders={hwcHeaders} tableLegend={\"tester\"} />\n            </div>\n        )\n    }\n}\n\nexport default HomeworkClub","import React from \"react\"\n\nimport TableR from './TableR.js';\n\nimport CollectionForm from './CollectionForm.js';\nimport DescriptionText from './DescriptionText.js';\nimport Selector from './Selector.js';\nimport CallbackButton from './CallbackButton.js';\nimport TableComponent from './TableComponent.js';\n\nimport HomebridingTable from './HomebridingTable.js';\n\nimport DatePicker from './DatePicker.js';\nimport DatePicker2 from './DatePicker2.js';\n\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\nimport Nav from \"./Nav.js\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nimport configValues from '../config.js';\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n// reference values from config.js\n//var students = configValues.students\n//var students = [\"Cottontail, Ralph\"]\nvar times = configValues.times\nvar classes = configValues.classes\nvar periods = configValues.periods\n\n// headers for each type of table\nvar hwcHeaders = configValues.homeworkClubHeaders\nvar detentionHeaders = []\n\n\nfunction getFormattedDate(date) {\n    var year = date.getFullYear();\n\n    var month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    var day = date.getDate().toString();\n    day = day.length > 1 ? day : '0' + day;\n\n    return month + '/' + day + '/' + year;\n}\n\nclass AdminHomeworkClubView extends React.Component {\n    state = {\n        homeworkEntries: [],\n        detentionEntries: [],\n        dueDate: \"\",\n        descriptionText: \"\",\n    }\n\n    // GET all currentHomeworkClubEntries data to populate table with and store them in state as \"homeworkEntries\"\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/adminHomeworkClub\", {\n            method: 'GET'\n        })\n            .then(res => res.json())\n            .then(homeworkEntries => this.initialTablePopulation(homeworkEntries))\n\n        this.setState({\n            dueDate: getFormattedDate(new Date())\n        })\n    }\n\n    // a helper function that converts information from the 'currentHomeworkClubEntries' MongoDB collection \n    // into the initial TableComponent entries displayed by the TableR component\n    initialTablePopulation(listOfEntries) {\n        console.log(listOfEntries)\n        // for each value (aka property) of the MongoDB document object, append a TableComponent to the list of homeworkEntries\n        for (let [key, value] of Object.entries(listOfEntries)) {\n            console.log(\" *** value *** \", value)\n            // TODO: use the entries ObjectId value as the reference index so we can delete it from DB later down the road\n\n            this.setState(prevState => ({\n                homeworkEntries: [...prevState.homeworkEntries,\n                <TableComponent\n                    id={uniqid()}\n                    referenceIndex={value._id}\n                    studentName={value.student.fname + \" \" + value.student.lname}\n                    selectorValue={value.class}\n                    description={value.description}\n                    dueDate={value.date}\n                    callbackRef={(event) => this.onClickRemoveCard(event)}\n                />\n                ]\n            }))\n        }\n    }\n\n    // POST a new table entry into the currentHomeworkClubEntries collection in the DB\n    onClickAddHomeworkCard() {\n        // splice first and last name into two seperate values\n        var splicedName = document.querySelector('#studentName').value.split(', ')\n\n        // data sent in the body to the express server for saving in MongoDB\n        var data = {\n            date: document.querySelector('#date').value,\n            assignedBy: \"Mr.Lowe\",\n            period: document.querySelector('#classPeriod').value,\n            class: document.querySelector('#classSection').value,\n            description: document.querySelector('#descriptionText').value,\n            // for Mongoose to query student ObjectId \n            studentFname: splicedName[1],\n            studentLname: splicedName[0]\n        }\n\n        // perform POST API operation to create a new currentHomeworkClub document in DB\n        fetch(configValues.serverURL + \"/api/adminHomeworkClub\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            // use the responseObject's _id field for the TableComponent's referenceIndex property\n            // we use this value in onClickRemoveCard to filter it out later\n            .then(responseObject => this.additionalTablePopulation(responseObject._id))\n    }\n\n    // a helper function which adds additional TableR entries using the _id of the latest created document object\n    additionalTablePopulation(responseId) {\n        var splicedName = document.querySelector('#studentName').value.split(', ')\n\n        // the TableR component needs a TableComponent appended to it as well since we now have an \n        // additonal homeworkEntry!\n        this.setState(prevState => ({\n            homeworkEntries: [...prevState.homeworkEntries,\n            <TableComponent\n                // THIS ID COULD BE A MAJOR PROBLEM FOR DELETING TABLE ENTRIES! \n                id={uniqid()}\n                // THIS REFERENCE COULD BE A MAJOR PROBLEM!\n                referenceIndex={responseId}\n                studentName={splicedName[1] + \" \" + splicedName[0]}\n                selectorValue={document.querySelector('#classSection').value}\n                description={document.querySelector('#descriptionText').value}\n                dueDate={document.querySelector('#date').value}\n                callbackRef={(event) => this.onClickRemoveCard(event)}\n            />\n            ]\n        }))\n    }\n\n    onClickRemoveCard(event) {\n        // data sent in the body to the express server for saving in MongoDB\n        var data = {\n            referenceId: event.target.id,\n        }\n\n        console.log(event.target.id)\n\n        // perform fetch with DELETE header\n        fetch(configValues.serverURL + \"/api/adminHomeworkClub\", {\n            method: 'DELETE',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n\n        // remove the TableComponent from the current list via filter\n        this.setState(\n            {\n                homeworkEntries: this.state.homeworkEntries.filter(function (entry) {\n                    // return all entries which do not share the id of the target entry\n                    return entry.props.referenceIndex !== event.target.id\n                })\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <CollectionForm collectionLegend={\"Homework Club\"}>\n                    <Selector\n                        configObjectValue=\"studentName\"\n                        arrayToMap={this.props.students}\n                        labelText=\"Select a student: \"\n                    />\n                    <Selector\n                        configObjectValue=\"classSection\"\n                        arrayToMap={classes}\n                        labelText=\"Class of assignment: \"\n                    />\n                    <Selector\n                        configObjectValue=\"classPeriod\"\n                        arrayToMap={periods}\n                        labelText=\"Class Period: \"\n                    />\n                    <DescriptionText\n                        callbackFunction={() => this.setState({ descriptionText: document.querySelector('#descriptionText').value })}\n                        passedStateValue={this.state.descriptionText}\n                        descriptionPlaceholder={\"Description of assignment\"}\n                        passedId=\"descriptionText\"\n                    />\n                    <DatePicker\n                        callbackFunction={() => this.setState({ dueDate: document.querySelector('#date').value })}\n                        passedStateValue={this.state.dueDate}\n                    />\n                    <CallbackButton callbackFunction={() => this.onClickAddHomeworkCard()} buttonDisplayValue=\"Add Student\" />\n                </CollectionForm>\n\n                <TableR entries={this.state.homeworkEntries} tableHeaders={hwcHeaders} tableLegend=\"Homework Club Entries\" />\n            </div >\n        )\n    }\n}\n\nexport default AdminHomeworkClubView","import React from \"react\"\n\nimport TableR from './TableR.js';\n\nimport CollectionForm from './CollectionForm.js';\nimport DescriptionText from './DescriptionText.js';\nimport Selector from './Selector.js';\nimport CallbackButton from './CallbackButton.js';\nimport TableComponent from './TableComponent.js';\n\nimport HomebridingTable from './HomebridingTable.js';\n\nimport DatePicker from './DatePicker.js';\nimport DatePicker2 from './DatePicker2.js';\n\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\nimport Nav from \"./Nav.js\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nimport configValues from '../config.js';\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n// reference values from config.js\n//var students = configValues.students\n//var students = [\"Cottontail, Ralph\"]\nvar times = configValues.times\nvar classes = configValues.classes\nvar periods = configValues.periods\n\n// headers for each type of table\nvar hwcHeaders = configValues.homeworkClubHeaders\nvar detentionHeaders = []\nvar misbehaviorCategories = [\n    \"Inappropriate language\", \"Teasing\", \"Open computer\", \"Inappropriate use of computer\", \"Headphones on without specific permission\", \"Speaking out during class\"\n    , \"Tardiness\", \"Name-calling\", \"Disruptive behavior\", \"Not following directions\", \"Failure to do a chore\", \"Cell Phones out or in use\", \"Refusal to participate\", \n    \"Food in a classroom\", \"Backpack or other materials not part of class, carried into class\"\n]\n\n\nfunction getFormattedDate(date) {\n    var year = date.getFullYear();\n\n    var month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    var day = date.getDate().toString();\n    day = day.length > 1 ? day : '0' + day;\n\n    return month + '/' + day + '/' + year;\n}\n\nclass AdminHomeworkClubView extends React.Component {\n    state = {\n        homeworkEntries: [],\n        detentionEntries: [],\n        dueDate: \"\",\n        descriptionText: \"\",\n    }\n\n    // GET all currentHomeworkClubEntries data to populate table with and store them in state as \"homeworkEntries\"\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/adminHomeworkClub\", {\n            method: 'GET'\n        })\n            .then(res => res.json())\n            .then(homeworkEntries => this.initialTablePopulation(homeworkEntries))\n\n        this.setState({\n            dueDate: getFormattedDate(new Date())\n        })\n    }\n\n    // a helper function that converts information from the 'currentHomeworkClubEntries' MongoDB collection \n    // into the initial TableComponent entries displayed by the TableR component\n    initialTablePopulation(listOfEntries) {\n        console.log(listOfEntries)\n        // for each value (aka property) of the MongoDB document object, append a TableComponent to the list of homeworkEntries\n        for (let [key, value] of Object.entries(listOfEntries)) {\n            console.log(\" *** value *** \", value)\n            // TODO: use the entries ObjectId value as the reference index so we can delete it from DB later down the road\n\n            this.setState(prevState => ({\n                homeworkEntries: [...prevState.homeworkEntries,\n                <TableComponent\n                    id={uniqid()}\n                    referenceIndex={value._id}\n                    studentName={value.student.fname + \" \" + value.student.lname}\n                    selectorValue={value.class}\n                    description={value.description}\n                    dueDate={value.date}\n                    callbackRef={(event) => this.onClickRemoveCard(event)}\n                />\n                ]\n            }))\n        }\n    }\n\n    // POST a new table entry into the currentHomeworkClubEntries collection in the DB\n    onClickAddHomeworkCard() {\n        // splice first and last name into two seperate values\n        var splicedName = document.querySelector('#studentName').value.split(', ')\n\n        // data sent in the body to the express server for saving in MongoDB\n        var data = {\n            date: document.querySelector('#date').value,\n            assignedBy: \"Mr.Lowe\",\n            period: document.querySelector('#classPeriod').value,\n            class: document.querySelector('#classSection').value,\n            description: document.querySelector('#descriptionText').value,\n            // for Mongoose to query student ObjectId \n            studentFname: splicedName[1],\n            studentLname: splicedName[0]\n        }\n\n        // perform POST API operation to create a new currentHomeworkClub document in DB\n        fetch(configValues.serverURL + \"/api/adminHomeworkClub\", {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n            // use the responseObject's _id field for the TableComponent's referenceIndex property\n            // we use this value in onClickRemoveCard to filter it out later\n            .then(responseObject => this.additionalTablePopulation(responseObject._id))\n    }\n\n    // a helper function which adds additional TableR entries using the _id of the latest created document object\n    additionalTablePopulation(responseId) {\n        var splicedName = document.querySelector('#studentName').value.split(', ')\n\n        // the TableR component needs a TableComponent appended to it as well since we now have an \n        // additonal homeworkEntry!\n        this.setState(prevState => ({\n            homeworkEntries: [...prevState.homeworkEntries,\n            <TableComponent\n                // THIS ID COULD BE A MAJOR PROBLEM FOR DELETING TABLE ENTRIES! \n                id={uniqid()}\n                // THIS REFERENCE COULD BE A MAJOR PROBLEM!\n                referenceIndex={responseId}\n                studentName={splicedName[1] + \" \" + splicedName[0]}\n                selectorValue={document.querySelector('#classSection').value}\n                description={document.querySelector('#descriptionText').value}\n                dueDate={document.querySelector('#date').value}\n                callbackRef={(event) => this.onClickRemoveCard(event)}\n            />\n            ]\n        }))\n    }\n\n    onClickRemoveCard(event) {\n        // data sent in the body to the express server for saving in MongoDB\n        var data = {\n            referenceId: event.target.id,\n        }\n\n        console.log(event.target.id)\n\n        // perform fetch with DELETE header\n        fetch(configValues.serverURL + \"/api/adminHomeworkClub\", {\n            method: 'DELETE',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(data)\n        })\n            .then(res => res.json())\n\n        // remove the TableComponent from the current list via filter\n        this.setState(\n            {\n                homeworkEntries: this.state.homeworkEntries.filter(function (entry) {\n                    // return all entries which do not share the id of the target entry\n                    return entry.props.referenceIndex !== event.target.id\n                })\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <CollectionForm collectionLegend={\"Detentions\"}>\n                    <Selector\n                        configObjectValue=\"studentName\"\n                        arrayToMap={this.props.students}\n                        labelText=\"Select a student: \"\n                    />\n                    <Selector\n                        configObjectValue=\"classSection\"\n                        arrayToMap={classes}\n                        labelText=\"Class of detention: \"\n                    />\n                    <Selector\n                        configObjectValue=\"classPeriod\"\n                        arrayToMap={periods}\n                        labelText=\"Class period detention was issued: \"\n                    />\n                    <Selector\n                        configObjectValue=\"misbehaviorCategory\"\n                        arrayToMap={misbehaviorCategories}\n                        labelText=\"Category of misbehavior\"\n                    />\n                    <DatePicker\n                        callbackFunction={() => this.setState({ dueDate: document.querySelector('#date').value })}\n                        passedStateValue={this.state.dueDate}\n                    />\n                    <CallbackButton callbackFunction={() => this.onClickAddHomeworkCard()} buttonDisplayValue=\"Add Student\" />\n                </CollectionForm>\n\n                <TableR entries={this.state.homeworkEntries} tableHeaders={hwcHeaders} tableLegend=\"Homework Club Entries\" />\n            </div >\n        )\n    }\n}\n\nexport default AdminHomeworkClubView","import React from 'react'\n\nimport configValues from '../config.js';\n\nimport TableR from './TableR.js';\nimport TableComponent from './TableComponent.js';\n\nimport HomeworkClub from './HomeworkClub.js';\n\nimport CollectionForm from './CollectionForm.js';\nimport DescriptionText from './DescriptionText.js';\nimport Selector from './Selector.js';\nimport CallbackButton from './CallbackButton.js';\nimport HomebridingTable from './HomebridingTable.js';\nimport DatePicker from './DatePicker.js';\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\nimport Nav from \"./Nav.js\";\n\nimport AdminHomeworkClubView from \"./AdminHomeworkClubView.js\";\nimport AdminDetentionsView from \"./AdminDetentionsView.js\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n// reference values from config.js\n// var students = [\"Cottontail, Ralph\"]\nvar times = configValues.times\nvar classes = configValues.classes\nvar periods = configValues.periods\n\n// headers for each type of table\nvar hwcHeaders = configValues.homeworkClubHeaders\nvar detentionHeaders = []\n\nclass AdminView extends React.Component {\n    state = {allStudentInfo:[], students: []}\n\n    // GET all currentHomeworkClubEntries data to populate table with and store them in state as \"homeworkEntries\"\n    componentDidMount() {\n        fetch(configValues.serverURL + \"/api/fetchStudentNames\", {\n            method: 'GET'\n        })\n            .then(res => res.json())\n            .then(students => this.collectStudentInfo(students))\n    }\n\n    // helper function that collects all the student info from DB \n    collectStudentInfo(listOfEntries){\n        // sort all fetched data by last name of student\n        listOfEntries.sort((a, b) => (a.lname > b.lname) ? 1 : -1)\n        \n        // grab the entire document of each student for components that need more details\n        this.setState({allStudentInfo: listOfEntries})\n        \n        // grab the \"lname\" and \"fname\" properties of each student for components only need name data\n        for (let [key, value] of Object.entries(listOfEntries)) {\n            this.setState(prevState => ({\n                // append those values to the list of students in state\n                students: [...prevState.students, value.lname + \", \" + value.fname]\n            }))\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n\n                <Router>\n\n                    <Nav />\n\n                    <Switch>\n                        <Route path=\"/detentioncenter\">\n                            <AdminDetentionsView students={this.state.students}/>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/homeworkclub\">\n                            <AdminHomeworkClubView students={this.state.students}/>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/homebriding\">\n                            <CollectionForm collectionLegend={\"\"}>\n                                <HomebridingTable students={this.state.allStudentInfo} tableLegend={\"Homebriding 2020\"} />\n                            </CollectionForm>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/supporttickets\" >\n                            <h1>Coming soon!</h1>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/guides\" >\n                            <h1>Coming soon!</h1>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/procedures\" >\n                            <h1>Coming soon!</h1>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/home\" >\n                            <h1>More data required to visualize effectively</h1>\n                        </Route>\n                    </Switch>\n\n                </Router>\n\n            </div >\n        )\n    }\n}\n\nexport default AdminView","import React from 'react'\n\nimport LoginMenu from './LoginMenu.js';\nimport AdminView from \"./AdminView.js\";\n\nimport CollectionForm from './CollectionForm.js'\n\nimport configValues from \"../config.js\"\n\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\nvar Loader = require('react-loader');\n\n\n\n// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\nclass AdminClient extends React.Component {\n    state = { username: \"\", password: \"\", loginState: \"\", admin: false, loading: false, loaded: true }\n\n    componentDidMount() {\n        this.setState({\n            loginState:\n                <CollectionForm >\n                    <LoginMenu\n                        callbackButton={() => this.authCheck()}\n                        callbackOnChangeUsername={(event) => this.updateUsernameState(event)}\n                        callbackOnChangePassword={(event) => this.updatePasswordState(event)}\n                        loadedState={this.state.loaded}\n                    />\n                </CollectionForm>\n        })\n    }\n\n    // updates the state on keystroke change\n    updateUsernameState(event) {\n        this.setState({ username: event.target.value })\n    }\n\n    updatePasswordState(event) {\n        this.setState({ password: event.target.value })\n    }\n\n    // TODO: update the fetch to search for a parent username and password!\n    async authCheck() {\n        this.setState({ loading: true, loaded: false })\n        await console.log(\"authcheck started, update finished9!\", configValues.serverURL, this.state.loading)\n\n\n        await fetch(configValues.serverURL + \"/admin\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Origin': 'https://ogjaylowe.github.io'\n            },\n            body: JSON.stringify({ username: this.state.username, password: this.state.password })\n        })\n            .then(res => res.json())\n            .then(admin => {\n                console.log(admin)\n                if (admin != false) {\n                    this.setState({ admin })\n                }\n            })\n            .then(() => this.conditionalCheck())\n            \n        await this.setState({loading: false, loaded: true})\n    }\n\n    // performs auth check\n    conditionalCheck() {\n        if (this.state.admin != false) {\n            this.setState({ loginState: <AdminView /> })\n        } else {\n            alert(this.state.condition + \" is not a registered username!\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" >\n                            <Loader loaded={this.state.loaded}>\n                                {this.state.loginState}\n                            </Loader>\n                        </Route>\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n\nexport default AdminClient","import React from 'react'\n\nimport ParentClient from './components/ParentClient.js'\nimport AdminClient from './components/AdminClient.js'\n\nimport AdminView from \"./components/AdminView.js\";\n\nimport ParentView from \"./components/ParentView.js\";\n\nimport { AwesomeButton } from 'react-awesome-button';\n\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div>\n\n            <Router>\n                <Switch>\n                    <Route path=\"/parentClient\" >\n                        <ParentClient />\n                    </Route>\n\n                    <Route path=\"/adminClient\" >\n                        <AdminClient />\n                    </Route>\n\n\n                    <ul>\n                        <ul>\n                            <Link to=\"/parentClient\">\n                                <AwesomeButton \n                                    size={'large'}\n                                    type=\"primary\"\n                                    style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"100px\"}}\n                                >\n                                    Parent Side Client</AwesomeButton>\n                            </Link>\n                        </ul>\n                        <ul>\n                            <Link to=\"/adminClient\">\n                            <AwesomeButton \n                                    size={'large'}\n                                    type=\"secondary\"\n                                    style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"100px\"}}\n                                >\n                                    Admin/Teacher Side Client</AwesomeButton>\n                            </Link>\n                        </ul>\n                    </ul>\n\n                </Switch>\n            </Router>\n\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}