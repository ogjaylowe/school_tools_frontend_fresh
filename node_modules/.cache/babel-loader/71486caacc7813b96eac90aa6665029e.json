{"ast":null,"code":"var _jsxFileName = \"/Users/jaylowe/Projects/Orion/school_tools_frontend_fresh/src/components/HomeworkClub.js\";\nimport React from 'react';\nimport configValues from '../config.js';\nimport TableR from './TableR.js';\nimport TableComponent from './TableComponent.js';\nimport CollectionForm from './CollectionForm.js';\nimport DescriptionText from './DescriptionText.js';\nimport Selector from './Selector.js';\nimport CallbackButton from './CallbackButton.js';\nimport HomebridingTable from './HomebridingTable.js';\nimport DatePicker from './DatePicker.js'; //// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\n\nvar uniqid = require('uniqid'); // reference values from config.js\n\n\nvar students = configValues.students;\nvar times = configValues.times;\nvar classes = configValues.classes; // headers for each type of table\n\nvar hwcHeaders = configValues.homeworkClubHeaders;\nvar detentionHeaders = [];\n\nfunction getFormattedDate(date) {\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : '0' + month;\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : '0' + day;\n  return month + '/' + day + '/' + year;\n}\n\nclass HomeworkClub extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      homeworkEntries: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      dueDate: getFormattedDate(new Date())\n    });\n  }\n\n  onClickAddHomeworkCard() {\n    // TODO: refactor these uncontrolled components\n    var qstudentName = document.querySelector('#studentNames').value;\n    var qclassSection = document.querySelector('#classSection').value;\n    var qReferenceIndex = uniqid();\n    this.setState(prevState => ({\n      homeworkEntries: [...prevState.homeworkEntries, /*#__PURE__*/React.createElement(TableComponent, {\n        id: uniqid(),\n        referenceIndex: qReferenceIndex,\n        studentName: qstudentName,\n        selectorValue: qclassSection,\n        description: this.state.descriptionText,\n        dueDate: this.state.dueDate,\n        callbackRef: event => this.onClickRemoveCard(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      })]\n    }));\n  }\n\n  onClickRemoveCard(event) {\n    this.setState({\n      homeworkEntries: this.state.homeworkEntries.filter(function (entry) {\n        return entry.props.referenceIndex !== event.target.id;\n      })\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CollectionForm, {\n      collectionLegend: \"Homework Club\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Selector, {\n      configObjectValue: \"studentNames\",\n      arrayToMap: students,\n      labelText: \"Select a student: \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Selector, {\n      configObjectValue: \"classSection\",\n      arrayToMap: classes,\n      labelText: \"Select className of assignment: \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DescriptionText, {\n      callbackFunction: () => this.setState({\n        descriptionText: document.querySelector('#descriptionText').value\n      }),\n      passedStateValue: this.state.descriptionText,\n      descriptionPlaceholder: \"Description of assignment\",\n      passedId: \"descriptionText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      callbackFunction: () => this.setState({\n        dueDate: document.querySelector('#date').value\n      }),\n      passedStateValue: this.state.dueDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CallbackButton, {\n      callbackFunction: () => this.onClickAddHomeworkCard(),\n      buttonDisplayValue: \"Add Student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(TableR, {\n      entries: this.state.homeworkEntries,\n      tableHeaders: hwcHeaders,\n      tableLegend: \"tester\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default HomeworkClub;","map":{"version":3,"sources":["/Users/jaylowe/Projects/Orion/school_tools_frontend_fresh/src/components/HomeworkClub.js"],"names":["React","configValues","TableR","TableComponent","CollectionForm","DescriptionText","Selector","CallbackButton","HomebridingTable","DatePicker","uniqid","require","students","times","classes","hwcHeaders","homeworkClubHeaders","detentionHeaders","getFormattedDate","date","year","getFullYear","month","getMonth","toString","length","day","getDate","HomeworkClub","Component","state","homeworkEntries","componentDidMount","setState","dueDate","Date","onClickAddHomeworkCard","qstudentName","document","querySelector","value","qclassSection","qReferenceIndex","prevState","descriptionText","event","onClickRemoveCard","filter","entry","props","referenceIndex","target","id","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,UAAP,MAAuB,iBAAvB,C,CAGA;AACA;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB,C,CAEA;;;AACA,IAAIC,QAAQ,GAAGX,YAAY,CAACW,QAA5B;AACA,IAAIC,KAAK,GAAGZ,YAAY,CAACY,KAAzB;AACA,IAAIC,OAAO,GAAGb,YAAY,CAACa,OAA3B,C,CAEA;;AACA,IAAIC,UAAU,GAAGd,YAAY,CAACe,mBAA9B;AACA,IAAIC,gBAAgB,GAAG,EAAvB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,MAAIC,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAX;AAEA,MAAIC,KAAK,GAAG,CAAC,IAAIH,IAAI,CAACI,QAAL,EAAL,EAAsBC,QAAtB,EAAZ;AACAF,EAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,GAAe,CAAf,GAAmBH,KAAnB,GAA2B,MAAMA,KAAzC;AAEA,MAAII,GAAG,GAAGP,IAAI,CAACQ,OAAL,GAAeH,QAAf,EAAV;AACAE,EAAAA,GAAG,GAAGA,GAAG,CAACD,MAAJ,GAAa,CAAb,GAAiBC,GAAjB,GAAuB,MAAMA,GAAnC;AAEA,SAAOJ,KAAK,GAAG,GAAR,GAAcI,GAAd,GAAoB,GAApB,GAA0BN,IAAjC;AACH;;AAGD,MAAMQ,YAAN,SAA2B5B,KAAK,CAAC6B,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACJC,MAAAA,eAAe,EAAE;AADb,KAD+B;AAAA;;AAKvCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAEhB,gBAAgB,CAAC,IAAIiB,IAAJ,EAAD;AADf,KAAd;AAGH;;AAGDC,EAAAA,sBAAsB,GAAG;AACrB;AACA,QAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,EAAwCC,KAA3D;AACA,QAAIC,aAAa,GAAGH,QAAQ,CAACC,aAAT,CAAuB,eAAvB,EAAwCC,KAA5D;AAEA,QAAIE,eAAe,GAAGhC,MAAM,EAA5B;AAEA,SAAKuB,QAAL,CAAcU,SAAS,KAAK;AACxBZ,MAAAA,eAAe,EAAE,CAAC,GAAGY,SAAS,CAACZ,eAAd,eACjB,oBAAC,cAAD;AACI,QAAA,EAAE,EAAErB,MAAM,EADd;AAEI,QAAA,cAAc,EAAEgC,eAFpB;AAGI,QAAA,WAAW,EAAEL,YAHjB;AAII,QAAA,aAAa,EAAEI,aAJnB;AAKI,QAAA,WAAW,EAAE,KAAKX,KAAL,CAAWc,eAL5B;AAMI,QAAA,OAAO,EAAE,KAAKd,KAAL,CAAWI,OANxB;AAOI,QAAA,WAAW,EAAGW,KAAD,IAAW,KAAKC,iBAAL,CAAuBD,KAAvB,CAP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADiB;AADO,KAAL,CAAvB;AAaH;;AAEDC,EAAAA,iBAAiB,CAACD,KAAD,EAAQ;AACrB,SAAKZ,QAAL,CACI;AACIF,MAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC,eAAX,CAA2BgB,MAA3B,CAAkC,UAAUC,KAAV,EAAiB;AAChE,eAAOA,KAAK,CAACC,KAAN,CAAYC,cAAZ,KAA+BL,KAAK,CAACM,MAAN,CAAaC,EAAnD;AACH,OAFgB;AADrB,KADJ;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAgB,MAAA,gBAAgB,EAAE,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,iBAAiB,EAAC,cADtB;AAEI,MAAA,UAAU,EAAEzC,QAFhB;AAGI,MAAA,SAAS,EAAC,oBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,QAAD;AAAU,MAAA,iBAAiB,EAAC,cAA5B;AAA2C,MAAA,UAAU,EAAEE,OAAvD;AAAgE,MAAA,SAAS,EAAC,kCAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,eAAD;AACI,MAAA,gBAAgB,EAAE,MAAM,KAAKmB,QAAL,CAAc;AAAEW,QAAAA,eAAe,EAAEN,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC;AAA9D,OAAd,CAD5B;AAEI,MAAA,gBAAgB,EAAE,KAAKV,KAAL,CAAWc,eAFjC;AAGI,MAAA,sBAAsB,EAAE,2BAH5B;AAII,MAAA,QAAQ,EAAC,iBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAaI,oBAAC,UAAD;AACI,MAAA,gBAAgB,EAAE,MAAM,KAAKX,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEI,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCC;AAA3C,OAAd,CAD5B;AAEI,MAAA,gBAAgB,EAAE,KAAKV,KAAL,CAAWI,OAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,eAiBI,oBAAC,cAAD;AAAgB,MAAA,gBAAgB,EAAE,MAAM,KAAKE,sBAAL,EAAxC;AAAuE,MAAA,kBAAkB,EAAC,aAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBJ,CADJ,eAqBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC,eAA5B;AAA6C,MAAA,YAAY,EAAEhB,UAA3D;AAAuE,MAAA,WAAW,EAAE,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,CADJ;AAyBH;;AAtEsC;;AAyE3C,eAAea,YAAf","sourcesContent":["import React from 'react'\n\nimport configValues from '../config.js';\n\nimport TableR from './TableR.js';\nimport TableComponent from './TableComponent.js';\n\nimport CollectionForm from './CollectionForm.js';\nimport DescriptionText from './DescriptionText.js';\nimport Selector from './Selector.js';\nimport CallbackButton from './CallbackButton.js';\nimport HomebridingTable from './HomebridingTable.js';\nimport DatePicker from './DatePicker.js';\n\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n// reference values from config.js\nvar students = configValues.students\nvar times = configValues.times\nvar classes = configValues.classes\n\n// headers for each type of table\nvar hwcHeaders = configValues.homeworkClubHeaders\nvar detentionHeaders = []\n\nfunction getFormattedDate(date) {\n    var year = date.getFullYear();\n\n    var month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    var day = date.getDate().toString();\n    day = day.length > 1 ? day : '0' + day;\n\n    return month + '/' + day + '/' + year;\n}\n\n\nclass HomeworkClub extends React.Component {\n    state = {\n        homeworkEntries: [],\n    }\n\n    componentDidMount() {\n        this.setState({\n            dueDate: getFormattedDate(new Date())\n        })\n    }\n\n\n    onClickAddHomeworkCard() {\n        // TODO: refactor these uncontrolled components\n        var qstudentName = document.querySelector('#studentNames').value\n        var qclassSection = document.querySelector('#classSection').value\n\n        var qReferenceIndex = uniqid()\n\n        this.setState(prevState => ({\n            homeworkEntries: [...prevState.homeworkEntries,\n            <TableComponent\n                id={uniqid()}\n                referenceIndex={qReferenceIndex}\n                studentName={qstudentName}\n                selectorValue={qclassSection}\n                description={this.state.descriptionText}\n                dueDate={this.state.dueDate}\n                callbackRef={(event) => this.onClickRemoveCard(event)}\n            />\n            ]\n        }))\n    }\n\n    onClickRemoveCard(event) {\n        this.setState(\n            {\n                homeworkEntries: this.state.homeworkEntries.filter(function (entry) {\n                    return entry.props.referenceIndex !== event.target.id\n                })\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <CollectionForm collectionLegend={\"Homework Club\"}>\n                    <Selector\n                        configObjectValue=\"studentNames\"\n                        arrayToMap={students}\n                        labelText=\"Select a student: \"\n                    />\n                    <Selector configObjectValue=\"classSection\" arrayToMap={classes} labelText=\"Select className of assignment: \" />\n                    <DescriptionText\n                        callbackFunction={() => this.setState({ descriptionText: document.querySelector('#descriptionText').value })}\n                        passedStateValue={this.state.descriptionText}\n                        descriptionPlaceholder={\"Description of assignment\"}\n                        passedId=\"descriptionText\"\n                    />\n                    <DatePicker\n                        callbackFunction={() => this.setState({ dueDate: document.querySelector('#date').value })}\n                        passedStateValue={this.state.dueDate}\n                    />\n                    <CallbackButton callbackFunction={() => this.onClickAddHomeworkCard()} buttonDisplayValue=\"Add Student\" />\n                </CollectionForm>\n\n                <TableR entries={this.state.homeworkEntries} tableHeaders={hwcHeaders} tableLegend={\"tester\"} />\n            </div>\n        )\n    }\n}\n\nexport default HomeworkClub"]},"metadata":{},"sourceType":"module"}